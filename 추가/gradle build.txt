<2022-11-09>
    compile 이란?
        개발자가 작성한 소스코드를, 컴퓨터가 이해할 수 있는 기계어(바이너리)로 변환하는 작업.
    
    link 란?
        여러개로 분리된 소스파일들을 컴파일한 결과물들에서, 최종적으로 실행가능한 파일을 만들기 위해 필요한 부분을 찾아서 연결해주는 작업.
        ex) 
        A 소스파일에서 B 소스파일의 메소드를 호출하는 경우가 있다.
        이때 A와 B 소스파일을 각각 컴파일만 하면 A의 바이너리가 B의 바이너리를 찾을 수 없다.
        링크란 이때 A의 바이너리와 B의 바이너리를 연결하여, 하나의 프로그램으로 만들어 주는 작업이다.
    build 란?
        빌드는 compile + link를 말한다.
        소스코드로부터 실행가능한 어플리케이션을 생성하는 것.
    
    build 자동화
        개발자에게 빌드란 반복적으로 해야 하는 작업인데,
        잘 짜여진 프로세스를 자동으로 실행하여 어플리케이션을 생성하는 것이다.
        
        크게는 compile - test - package의 순서이며, 아래의 반복작업을 포함한다.
        
        preprocess : 전처리
        clean : 빌드시 생성되었던 파일들을 삭제
        validate : 프로젝트가 올바른지 확인하고, 필요한 모든 정보를 사용할 수 있는지 확인
        compile : 소스코드를 컴파일
        test : 단위테스트를 수행하는 단계
        package : 컴파일된 바이너리와 리소스들을, 배포가능한 jar, war 등의 패키지로 만드는 단계
        verify : 통합테스트 결과에 대한 검사를 실행하여 품질기준 충족 확인
        install : 패키지를 로컬 저장소에 설치
        site : 프로젝트 문서와 사이트 작성
        deploy : 만들어진 package를 원격 저장소에 release
    
    gradle 이란?
        build 자동화 도구. 
        
        5원칙
            1. 그래들은 범용성있는 빌드도구다.
            2. 그래들의 핵심 모델은 task 기반이다.
            3. 그래들은 몇개의 고정된 빌드 페이즈가 있다.
                1) 초기화 페이즈
                    빌드를 위한 환경 세팅, 어느 프로젝트를 참여시킬지 결정
                2) 설정 페이즈
                    빌드할 task 그래프 작성, 실행할 그래프 선택 및 순서 결정
                3) 실행 페이즈
                    설정 페이즈에서 설정된 대로 task들 실행
            4. 그래들은 다양한 방식으로 확장가능하다.
            5. 빌드스크립트가 API에 대해 동작한다.
        task = (Actions) + (Inputs) + (Outputs)
    gradle 멀티 모듈
        멀티 프로젝트에서 A프로젝트가 B프로젝트를 의존하는 경우 A를 컴파일시키면 내부적으로 먼저 B프로젝트가 컴파일되고,
        생성된 jar파일이 클래스패스에 추가되고 나서 A프로젝트가 컴파일된다.
    Git SubModule 이란?
        git 저장소 안에 다른 git 저장소를 디렉토리로 분리해 넣는 것.
        다른 독립된 git 저장소를 clone해서 내 git 저장소 안에 포함할 수 있으며, 각 저장소의 커밋은 독립적으로 관리된다.