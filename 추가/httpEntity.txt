
<2022-05-25>
HTTP Entity
    HTTP 요청/응답의 Http Header + Http Body를 포함하는 클래스

    하위 클래스
        RequestEntity
            패키지
                import org.springframework.http.RequestEntity;

        ResponseEntity
            개요
                HTTP Entity(HttpHeader + HttpBody)에 HttpStatusCode가 추가된 클래스.
            패키지
                import org.springframework.http.ResponseEntity;
            예시
                RestTemplate
                    ResponseEntity<String> entity = template.getForEntity("https://example.com", String.class);
                    String body = entity.getBody();
                    MediaType contentType = entity.getHeaders().getContentType();
                    HttpStatus statusCode = entity.getStatusCode();
                
                Spring MVC
                    1)
                        @RequestMapping("/handle")
                        public ResponseEntity<String> handle() {
                            URI location = ...;
                            HttpHeaders responseHeaders = new HttpHeaders();
                            responseHeaders.setLocation(location);
                            responseHeaders.set("MyResponseHeader", "MyValue");
                            return new ResponseEntity<String>("Hello World", responseHeaders, HttpStatus.CREATED);
                        }
                    
                    2)
                        @Data
                        public class Message {
                            private StatusEnum status;
                            private String message;
                            private Object data;
                            public Message() {
                                this.status = StatusEnum.BAD_REQUEST;
                                this.data = null;
                                this.message = null;
                            }
                        }

                        public enum StatusEnum {
                            OK(200, "OK"),
                            BAD_REQUEST(400, "BAD_REQUEST"),
                            NOT_FOUND(404, "NOT_FOUND"),
                            INTERNAL_SERER_ERROR(500, "INTERNAL_SERVER_ERROR");

                            int statusCode;
                            String code;
                            StatusEnum(int statusCode, String code) {
                                this.statusCode = statusCode;
                                this.code = code;
                            }
                        }

                        @RestController
                        public class UserController {
                            @GetMapping(value = "/user/{id}")
                            public ResponseEntity<Message> findById(@PathVariable int id) {
                                User user = userDaoService.findOne(id);
                                Message message = new Message();
                                HttpHeaders headers= new HttpHeaders();
                                headers.setContentType(new MediaType("application", "json", Charset.forName("UTF-8")));
                                message.setStatus(StatusEnum.OK);
                                message.setMessage("성공 코드");
                                message.setData(user);

                                return new ResponseEntity<>(message, headers, HttpStatus.OK);
                            }
                        }