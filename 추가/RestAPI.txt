Rest
    Representational State Transfer
    자원을 이름으로 구분하고, 해당 자원을 CRUD하는 것.

    자원
        문자, 그림, 데이터, 프로그램 등
    표현
        자원을 표현하기 위한 것으로, "학생" "리뷰" "숙소" "회원" "상품" 등이다.
    행위
        HTTP 메소드
            GET
                리소스 조회
                일반적으로 body없이 사용하며, 필요한 경우 데이터는 쿼리 스트링으로 날린다.
            POST
                데이터를 넘길테니, 이 데이터를 처리해줘
                주로 리소스 등록, 데이터 처리 프로세스에 사용한다.
                단순한 값 변경을 넘어, 서버쪽에서 큰 변화가 일어나는 작업이라면 POST를 사용한다.
            PUT
                해당 리소스가 없으면 생성, 리소스가 있으면 리소스를 완전히 대체 
                클라이언트가 리소스의 위치를 정확히 알고 지정한다.
                부분 대체가 아니라, 완전히 대체한다.
            PATCH
                리소스 부분 변경
            DELETE
                리소스 삭제
            HEAD
                GET과 같지만, body는 빼고 줘
    API 설계
        1) URI 설계에서 가장 중요한 것은 리소스 자체를 식별하는 것이다.

        2) 동사를 제거한다.
            리소스에 대한 행위는 메소드로 분리한다. path는 명사로만 구성
            불가피한 경우에는 행위도 Path에 포함시키기도 한다.

        3) Path에는 복수형만 사용한다.
            /review (X)
            /reviews (O)
            /members/{memberId} 조회시
            POST /members   등록시

        4) 계층구조가 있다면, 계층구조를 유지한다.
            /reviews/{reviewId}    => review
            /{service}/{product}/reviews 