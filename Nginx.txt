Nginx 
    동시접속에 특화된 웹서버 프로그램.
    apache 보다 단순하고 전달하는 역할만 하기때문에 단순하다, 아파치는 요청을 처리할 때 새로운 프로세스 또는 쓰레드를 생성하여 처리하지만
            nginx는 고정된 프로세스만 생성하여 사용하고, 비동기 방식으로 요청들을 처리
    리버스 프록시의 역할을 한다.
        리버스프록시 - 클라이언트 요청을 대신 받아 내부 서버로 전달해주는 것(사용자 -> nginx -> 웹서버로 구성)
    로드벨런싱(트래픽분산작업) -  성능, 확장성 및 신뢰성을 향상
    ssl 터미네이션 - 수신 SSL 연결을 처리 및 해독하고 프록시 서버의 응답을 암호화
    DDos 공격 완화 - 수신 요청과 단일 IP 주소당 연결 수를 일반 사용자에게 일반적인 값으로 제한
    
----------------------------------------------------------------------------------------
    설정
     /etc/nginx/nginx.conf
        # worker 프로세스를 실행할 사용자 설정
        # - 이 사용자에 따라 권한이 달라질 수 있다.
        user  nginx;
        # 실행할 worker 프로세스 설정
        # - 서버에 장착되어 있는 코어 수 만큼 할당하는 것이 보통, 더 높게도 설정 가능
        # 몇개의 프로세스를 생성할 것인지에 대한 설정. 1이면 모든요청을 하나의 프로세스로 처리한다는 뜻. 보통 auto로 설정.
        worker_processes  1;

        #이벤트 블록은 네트워크 동작방법과 관련된 설정
        # 접속 처리에 관한 설정을 한다.
        events {
            #하나의 프로세스가 처리할수있는 커넥션의 수.
            #최대 접속자수는 worker_processes X worker_connections
            worker_connections  1024;
        }

        # 오류 로그를 남길 파일 경로 지정
        error_log  /var/log/nginx/error.log warn;
        # NGINX 마스터 프로세스 ID 를 저장할 파일 경로 지정
        pid        /var/run/nginx.pid;

        # 웹, 프록시 관련 서버 설정
        #HTTP 부분과 관련된 모듈의 지시어와 블록을 정의
        # http, server, location 블록은 계층 구조
        # http 블록의 내용은 server 블록의 기본값이 되고, server 블록의 내용은 location 블록의 기본값
        # 상위 블록에서 선언된 지시어를 하위 블록에서 다시 선언하면 상위의 지시어는 무시
        # server 블록은 하나의 호스트를 선언하는데 사용하며, http 블록 안에서만 사용
        # location 블록에는 server 블록 안에 정의되며, 특정 URL을 처리하는 방법을 정의
        http {
            # mime.types 파일을 읽어들인다.
            include       /etc/nginx/mime.types;
            # MIME 타입 설정
            default_type  application/octet-stream;

            # 엑세스 로그 형식 지정
            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

            # 엑세스 로그를 남길 파일 경로 지정
            access_log  /var/log/nginx/access.log  main;

            # sendfile api 를 사용할지 말지 결정
            sendfile        on;

            # 접속시 커넥션을 몇 초동안 유지할지에 대한 설정(기본 타임은 초단위)
            keepalive_timeout  65;

            # (추가) nginx 버전을 숨길 수 있다. (보통 아래를 사용해서 숨기는게 일반적)
            server_tokens off


            # /etc/nginx/conf.d 디렉토리 아래 있는 .conf 파일을 모두 읽어 들임
            include /etc/nginx/conf.d/*.conf;

            server {
                listen 80;
                location / {
                    proxy_pass http://127.0.0.1:8081;
                }
                location /internal {
                    return 200; 
                }

                location /apple-app-site-association {
                    default_type application/json;
                }
            }
        }

   
        http {
           
        }