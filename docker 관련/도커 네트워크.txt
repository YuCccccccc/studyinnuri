

도커는 컨테이너 내부 ip를 순차적으로 할당하며 컨테이너를 재시작할 경우 변경될수 있다. 
내부ip는 호스트와 통신할수 있고 이것은 veth--- 라는 네트워크 인터페이스를 생성함으로 이루어 진다. 

veth : virtual eth 

도커가 자체적으로 제공하는 대표적인 네트워크 드라이버로는 브리지(bridge), 호스트(host), 논(none), 컨테이너(container), 오버레이(overlay)가 있다.

브릿지 네트워크는 사용자 정의 브릿지를 새로 생성해서 각 컨테이너에 연결하는 네트워크 구조.

docker network create --driver bridge 브릿지명
docker run - i - t name 연결할 컨테이너명 \
ᅳnet 브릿지명/image:tag


브릿지네트워크와 --net-alias 옵션.
--net-alias 옵션을 통해 특정호스트 이름으로 컨테이너 여러개에 접근 할 수 있다. 
매번 달라지는 ip 를 결정하는것이 라운드 로빈 방식인데 이것은 내장된 dns가 호스트 이름을 
--net-alias옵션으로 호스트를 설정한 컨테이너로 변환하기 때문.

호스트 네트워크
호스트의 네트워크 환경을 그대로 사용이 가능.
docker run - i - t — name network_host --net host image/tag

논 네트워크
네트워크 연결 없이 외부와 연결이 단절된 구성.

컨테이너 네트워크
--net옵션으로 container를 입력하면 다른 컨테이너와 네트워크 네임스페이스 환경을 공유.
공유되는 속성은 내부ip, 네트워크 인터페이스의 맥주소 등.
--net의 옵션값으로 container: 다른컨테이너의 ID 로 입력한다.
이렇게 하면 내부 ip를 할당 받지 않고 호스트에 veth로 시작하는 가상 네트워크 인터페이스도 생성되지 않는다.


macVLAN네트워크
호스트 네트워크인터페이스 카드를 가상화하여 물리 네트워크 환경을 컨테이너에게 동일하게 제공.
컨테이너는 물리 네트워크상에서 가상의 맥 주소를 가지고 해당 네트워크에 연결된 다른 장치와의 통신이 가능해진다. 
연결된 컨테이너는 기본적으로 할당되는 ip대역이 아닌 네트워크 장비의 ip를 할당 받는다. 



브릿지 네트워크 - 가상 스위치허브를 두어 같은 도커 데몬 호스트의 컨테이너에서만 동작
    기본 브릿지 네트워크를 사용하는 컨테이너들은 --link 옵션을 사용하지 않는 이상, 서로의 IP 주소를 통해서 접근해야 한다. 
    사용자 정의 브릿지 네트워크에서는 따로 컨테이너의 이름이나 별칭을 통해 접근이 가능

    리눅스 brctl
        /usr/sbin/brctl
        이더넷 브리지 관리 도구
        리눅스 브리지 설정
        bridge-utils 패키지에 있음
    -----------------------------
    2번째 링크의 rest통신관련 내용을 먼저 진행해보자. 